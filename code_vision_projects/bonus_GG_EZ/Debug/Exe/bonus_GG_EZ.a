;/*******************************************************
;This program was created by the
;CodeWizardAVR V3.14 Advanced
;Automatic Program Generator
;© Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project : Password_Module_Trail_0
;Version : 0
;Date    : 11/15/2021
;Author  : Mohamed Ibrahem
;Company : Home
;Comments:
;NO COMMENT
;
;
;Chip type               : ATmega32A
;Program type            : Application
;AVR Core Clock frequency: 11.059200 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 512
;*******************************************************/
;
;#include <mega32a.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;
;#include <delay.h>
;#define LED_GREEN PORTB.0
;#define LED_RED   PORTB.1
;
;#define BUTTON1 PINA.0
;//#define BUTTON2 PINA.1
;#define BUTTON3 PINA.2
;
;#define ON  1
;#define OFF 0
;
;char ctr_10=0;
;char counter1 = 0;
;char password_count = 6;
;char password [password_count]  = {1,1,1,0,0,0} ;

	.DSEG
;char entered [password_count]   = {0,0,0,0,0,0} ;
;
;//char new_pasword [password_count]   = {0,0,0,0,0,0} ;
;
;char test=1;
;char temp=0;
;
;char i=0;
;
;#define SET_BIT(VAR,BIT) VAR |= (1<<BIT)
;#define CLR_BIT(VAR,BIT) VAR &= (~(1<<BIT))
;#define TOG_BIT(VAR,BIT) VAR ^= (1<<BIT)
;#define GET_BIT(VAR,BIT) ((VAR>>BIT)&1)
;
;
;void EEPRom_Write(short address , char data){
; 0000 0039 void EEPRom_Write(short address , char data){

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 003A     EEARL = (char) address;
;PCODE: $0000000F VOL: 0
;	address -> Y+1
;	data -> Y+0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 003B     EEARH = (char) address >> 8;
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 003C     EEDR = data;
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 003D     SET_BIT (EECR , EEMWE);
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 003E     SET_BIT (EECR , EEWE);
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 003F     while (GET_BIT(EECR,EEWE) == 1);
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0000 0040 }
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;
;char EEPROM_READ ( short address){
; 0000 0042 char EEPROM_READ ( short address){
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0000 0043     EEARL = (char) address;
;PCODE: $0000002A VOL: 0
;	address -> Y+0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0000 0044     EEARH = (char) address >> 8;
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 0045     SET_BIT(EECR,EERE);
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0000 0046     return EEDR;
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 0047 }
;PCODE: $00000036 VOL: 0
;
;
;void main(void)
; 0000 004B {
;PCODE: $00000037 VOL: 0
; 0000 004C 
; 0000 004D DDRB    = 0xff ;
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0000 004E PORTB   = 0x00 ;
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0000 004F 
; 0000 0050 DDRA    = 0xf0 ;
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
; 0000 0051 PORTA   = 0x00 ;
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0000 0052 PORTA.0 = 1    ;
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0000 0053 PORTA.1 = 1    ;
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0000 0054 PORTA.2 = 1    ;
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0000 0055 
; 0000 0056 if( EEPROM_READ(80) != 0xff ){
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
; 0000 0057     password_count = EEPROM_READ(80);
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
; 0000 0058     delay_ms(100);
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0000 0059 
; 0000 005A for(i= 0 ; i< password_count  ;i++){
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
; 0000 005B     if( EEPROM_READ(i + i  * 8 ) != 0xff ){
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
; 0000 005C     password [i] =   EEPROM_READ(i + i  * 8 );
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
; 0000 005D     entered  [i] = 0;
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
; 0000 005E     delay_ms(100);
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
; 0000 005F     }
; 0000 0060   }
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
; 0000 0061 }
; 0000 0062 
; 0000 0063 while (1)
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
; 0000 0064       {
; 0000 0065       if(counter1 == password_count){
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
; 0000 0066               if (password_count == 0){
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
; 0000 0067                     password_count = 6;
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
; 0000 0068                     EEPRom_Write( 80  , password_count );
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
; 0000 0069                     for(i=0;i<password_count;i++){
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
; 0000 006A                     EEPRom_Write( i + i  * 8  , password[i] );
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
; 0000 006B                     password [i]  = 1;
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
; 0000 006C                     delay_ms(100);
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
; 0000 006D                     }
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
; 0000 006E               }
; 0000 006F               while(temp<password_count){
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
; 0000 0070                    if(entered[temp] ==  password[temp]){
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
; 0000 0071                       test =1;
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
; 0000 0072                      }
; 0000 0073                    else if ( entered[temp] !=  password[temp]){
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
; 0000 0074                       test =0;
;PCODE: $000000CA VOL: 0
; 0000 0075                       break;
;PCODE: $000000CB VOL: 0
; 0000 0076                     }
; 0000 0077                    temp++;
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
; 0000 0078                   }
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
; 0000 0079               temp=0;
;PCODE: $000000D1 VOL: 0
; 0000 007A               LED_GREEN = ON;
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
; 0000 007B               LED_RED = ON;
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
; 0000 007C               delay_ms(200);
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
; 0000 007D               LED_GREEN = OFF;
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
; 0000 007E               LED_RED = OFF;
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
; 0000 007F 
; 0000 0080               if( test == 1 ){
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
; 0000 0081                     LED_GREEN = ON;
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
; 0000 0082                     delay_ms(200);
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
; 0000 0083                     LED_GREEN = OFF;
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
; 0000 0084                     counter1=0;
;PCODE: $000000E7 VOL: 0
; 0000 0085                     }
; 0000 0086               else if (test == 0){
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
; 0000 0087                     LED_RED = ON;
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
; 0000 0088                     delay_ms(200);
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
; 0000 0089                     LED_RED = OFF;
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
; 0000 008A                     counter1=0;
;PCODE: $000000F3 VOL: 0
; 0000 008B                     test = 1;
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
; 0000 008C                     }
; 0000 008D                 }
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
; 0000 008E       else if( BUTTON1 == 1)
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
; 0000 008F       {
; 0000 0090       while(BUTTON1==1)
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
; 0000 0091       {
; 0000 0092         ctr_10++ ;
;PCODE: $00000101 VOL: 0
; 0000 0093         delay_ms(30);
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
; 0000 0094       }
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
; 0000 0095       if (ctr_10 <20){
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
; 0000 0096         entered[counter1] = 0;
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
; 0000 0097         LED_RED = ON ;
;PCODE: $0000010F VOL: 0
;PCODE: $00000110 VOL: 0
; 0000 0098         delay_ms(100);
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
; 0000 0099         LED_RED=OFF ;
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 0
; 0000 009A         LED_GREEN= ON ;
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
; 0000 009B         counter1++;
;PCODE: $00000118 VOL: 0
; 0000 009C         delay_ms(100);
;PCODE: $00000119 VOL: 0
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
; 0000 009D         LED_GREEN= OFF ;
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
; 0000 009E         }
; 0000 009F       else if (ctr_10 >=20)
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
; 0000 00A0         {
; 0000 00A1         entered[counter1] = 1;
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
; 0000 00A2         LED_GREEN= ON ;
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
; 0000 00A3         delay_ms(100);
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
;PCODE: $0000012C VOL: 0
; 0000 00A4         LED_RED=ON ;
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
; 0000 00A5         LED_GREEN= OFF ;
;PCODE: $0000012F VOL: 0
;PCODE: $00000130 VOL: 0
; 0000 00A6         counter1++;
;PCODE: $00000131 VOL: 0
; 0000 00A7         delay_ms(100);
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
; 0000 00A8         LED_RED = OFF ;
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
; 0000 00A9         }
; 0000 00AA          ctr_10=0;
;PCODE: $00000137 VOL: 0
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 0
; 0000 00AB       }
; 0000 00AC       /*else if( BUTTON2 == 1){
; 0000 00AD         delay_ms(200);
; 0000 00AE        entered[counter1] = 0;
; 0000 00AF         counter1++;
; 0000 00B0         }
; 0000 00B1         */
; 0000 00B2       else if( BUTTON3 == 1){
;PCODE: $0000013A VOL: 0
;PCODE: $0000013B VOL: 0
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
;PCODE: $0000013E VOL: 0
; 0000 00B3             password_count=0;
;PCODE: $0000013F VOL: 0
; 0000 00B4             LED_GREEN= ON;
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
; 0000 00B5             LED_RED  = ON;
;PCODE: $00000142 VOL: 0
;PCODE: $00000143 VOL: 0
; 0000 00B6             while (BUTTON3 == 1){
;PCODE: $00000144 VOL: 0
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
;PCODE: $00000147 VOL: 0
; 0000 00B7 
; 0000 00B8                     if( BUTTON1 == 1)
;PCODE: $00000148 VOL: 0
;PCODE: $00000149 VOL: 0
;PCODE: $0000014A VOL: 0
; 0000 00B9                     {
; 0000 00BA                         while(BUTTON1==1)
;PCODE: $0000014B VOL: 0
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
; 0000 00BB                         {
; 0000 00BC                             ctr_10++ ;
;PCODE: $0000014F VOL: 0
; 0000 00BD                             delay_ms(30);
;PCODE: $00000150 VOL: 0
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
; 0000 00BE                         }
;PCODE: $00000153 VOL: 0
;PCODE: $00000154 VOL: 0
; 0000 00BF                         if (ctr_10 <20){
;PCODE: $00000155 VOL: 0
;PCODE: $00000156 VOL: 0
;PCODE: $00000157 VOL: 0
; 0000 00C0                             LED_RED   = OFF;
;PCODE: $00000158 VOL: 0
;PCODE: $00000159 VOL: 0
; 0000 00C1                             delay_ms(200);
;PCODE: $0000015A VOL: 0
;PCODE: $0000015B VOL: 0
;PCODE: $0000015C VOL: 0
; 0000 00C2                             LED_RED   = ON;
;PCODE: $0000015D VOL: 0
;PCODE: $0000015E VOL: 0
; 0000 00C3                             password [password_count] = 0 ;
;PCODE: $0000015F VOL: 0
;PCODE: $00000160 VOL: 0
;PCODE: $00000161 VOL: 0
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
; 0000 00C4                             entered  [password_count] = 0 ;
;PCODE: $00000164 VOL: 0
;PCODE: $00000165 VOL: 0
;PCODE: $00000166 VOL: 0
;PCODE: $00000167 VOL: 0
;PCODE: $00000168 VOL: 0
; 0000 00C5                             password_count++;
;PCODE: $00000169 VOL: 0
; 0000 00C6                         }
; 0000 00C7                         else if (ctr_10 >=20)
;PCODE: $0000016A VOL: 0
;PCODE: $0000016B VOL: 0
;PCODE: $0000016C VOL: 0
;PCODE: $0000016D VOL: 0
;PCODE: $0000016E VOL: 0
; 0000 00C8                         {
; 0000 00C9                             LED_RED   = OFF;
;PCODE: $0000016F VOL: 0
;PCODE: $00000170 VOL: 0
; 0000 00CA                             delay_ms(200);
;PCODE: $00000171 VOL: 0
;PCODE: $00000172 VOL: 0
;PCODE: $00000173 VOL: 0
; 0000 00CB                             LED_RED   = ON;
;PCODE: $00000174 VOL: 0
;PCODE: $00000175 VOL: 0
; 0000 00CC                             password [password_count] = 1 ;
;PCODE: $00000176 VOL: 0
;PCODE: $00000177 VOL: 0
;PCODE: $00000178 VOL: 0
;PCODE: $00000179 VOL: 0
;PCODE: $0000017A VOL: 0
; 0000 00CD                             entered  [password_count] = 0 ;
;PCODE: $0000017B VOL: 0
;PCODE: $0000017C VOL: 0
;PCODE: $0000017D VOL: 0
;PCODE: $0000017E VOL: 0
;PCODE: $0000017F VOL: 0
; 0000 00CE                             password_count++;
;PCODE: $00000180 VOL: 0
; 0000 00CF                         }
; 0000 00D0                         ctr_10=0;
;PCODE: $00000181 VOL: 0
;PCODE: $00000182 VOL: 0
;PCODE: $00000183 VOL: 0
; 0000 00D1                     }
; 0000 00D2                    /*
; 0000 00D3                    if( BUTTON1 == 1){
; 0000 00D4 
; 0000 00D5                         LED_RED   = OFF;
; 0000 00D6                         delay_ms(200);
; 0000 00D7                         LED_RED   = ON;
; 0000 00D8                         password [password_count] = 1 ;
; 0000 00D9                         entered  [password_count] = 0 ;
; 0000 00DA                         password_count++;
; 0000 00DB                         }
; 0000 00DC                    else if( BUTTON2 == 1){
; 0000 00DD                         LED_RED   = OFF;
; 0000 00DE                         delay_ms(200);
; 0000 00DF                         LED_RED   = ON;
; 0000 00E0                         password [password_count] = 0 ;
; 0000 00E1                         entered  [password_count] = 0 ;
; 0000 00E2                         password_count++;
; 0000 00E3                         }*/
; 0000 00E4                    if(BUTTON3 == 0){
;PCODE: $00000184 VOL: 0
;PCODE: $00000185 VOL: 0
;PCODE: $00000186 VOL: 0
;PCODE: $00000187 VOL: 0
; 0000 00E5                    delay_ms(200);
;PCODE: $00000188 VOL: 0
;PCODE: $00000189 VOL: 0
;PCODE: $0000018A VOL: 0
; 0000 00E6                     if(BUTTON3 == 0){
;PCODE: $0000018B VOL: 0
;PCODE: $0000018C VOL: 0
;PCODE: $0000018D VOL: 0
; 0000 00E7                         break;}
;PCODE: $0000018E VOL: 0
; 0000 00E8                    }
;PCODE: $0000018F VOL: 0
; 0000 00E9             }
;PCODE: $00000190 VOL: 0
;PCODE: $00000191 VOL: 0
;PCODE: $00000192 VOL: 0
; 0000 00EA             EEPRom_Write( 80 , password_count );
;PCODE: $00000193 VOL: 0
;PCODE: $00000194 VOL: 0
;PCODE: $00000195 VOL: 0
;PCODE: $00000196 VOL: 0
; 0000 00EB             LED_GREEN= OFF;
;PCODE: $00000197 VOL: 0
;PCODE: $00000198 VOL: 0
; 0000 00EC             delay_ms(150);
;PCODE: $00000199 VOL: 0
;PCODE: $0000019A VOL: 0
;PCODE: $0000019B VOL: 0
; 0000 00ED             LED_GREEN= ON;
;PCODE: $0000019C VOL: 0
;PCODE: $0000019D VOL: 0
; 0000 00EE             for(i=0 ; i < password_count ; i++){
;PCODE: $0000019E VOL: 0
;PCODE: $0000019F VOL: 0
;PCODE: $000001A0 VOL: 0
;PCODE: $000001A1 VOL: 0
;PCODE: $000001A2 VOL: 0
;PCODE: $000001A3 VOL: 0
;PCODE: $000001A4 VOL: 0
; 0000 00EF                 EEPRom_Write( i + i  * 8  , password[i] );
;PCODE: $000001A5 VOL: 0
;PCODE: $000001A6 VOL: 0
;PCODE: $000001A7 VOL: 0
;PCODE: $000001A8 VOL: 0
;PCODE: $000001A9 VOL: 0
;PCODE: $000001AA VOL: 0
;PCODE: $000001AB VOL: 0
;PCODE: $000001AC VOL: 0
;PCODE: $000001AD VOL: 0
;PCODE: $000001AE VOL: 0
;PCODE: $000001AF VOL: 0
;PCODE: $000001B0 VOL: 0
;PCODE: $000001B1 VOL: 0
; 0000 00F0                 LED_GREEN= OFF;
;PCODE: $000001B2 VOL: 0
;PCODE: $000001B3 VOL: 0
; 0000 00F1                 LED_RED  = OFF;
;PCODE: $000001B4 VOL: 0
;PCODE: $000001B5 VOL: 0
; 0000 00F2                 delay_ms(150);
;PCODE: $000001B6 VOL: 0
;PCODE: $000001B7 VOL: 0
;PCODE: $000001B8 VOL: 0
; 0000 00F3                 LED_GREEN= ON;
;PCODE: $000001B9 VOL: 0
;PCODE: $000001BA VOL: 0
; 0000 00F4                 LED_RED  = ON;
;PCODE: $000001BB VOL: 0
;PCODE: $000001BC VOL: 0
; 0000 00F5             }
;PCODE: $000001BD VOL: 0
;PCODE: $000001BE VOL: 0
;PCODE: $000001BF VOL: 0
;PCODE: $000001C0 VOL: 0
; 0000 00F6             counter1=0;
;PCODE: $000001C1 VOL: 0
; 0000 00F7             LED_RED   = OFF;
;PCODE: $000001C2 VOL: 0
;PCODE: $000001C3 VOL: 0
; 0000 00F8             LED_GREEN= OFF;
;PCODE: $000001C4 VOL: 0
;PCODE: $000001C5 VOL: 0
; 0000 00F9 
; 0000 00FA         }
; 0000 00FB       else{
;PCODE: $000001C6 VOL: 0
;PCODE: $000001C7 VOL: 0
; 0000 00FC         LED_GREEN = OFF;
;PCODE: $000001C8 VOL: 0
;PCODE: $000001C9 VOL: 0
; 0000 00FD         LED_RED   = OFF;
;PCODE: $000001CA VOL: 0
;PCODE: $000001CB VOL: 0
; 0000 00FE         }
;PCODE: $000001CC VOL: 0
;PCODE: $000001CD VOL: 0
;PCODE: $000001CE VOL: 0
; 0000 00FF 
; 0000 0100       }
;PCODE: $000001CF VOL: 0
;PCODE: $000001D0 VOL: 0
; 0000 0101 }
;PCODE: $000001D1 VOL: 0
;PCODE: $000001D2 VOL: 0
;PCODE: $000001D3 VOL: 0
